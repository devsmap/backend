// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model countries {
  id           Int     @id @default(autoincrement())
  is_active    Boolean @default(value: "true")
  is_collected Boolean @default(value: "true")
  name         String  @unique
  region       String
  subregion    String
  google_gl    String
  google_hl    String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  legacy_id    Int 

  states       states[]
}

model states {
  id           Int     @id @default(autoincrement())
  country_id   Int 
  is_active    Boolean @default(value: "true")
  is_collected Boolean @default(value: "true")  
  name         String 
  google_uule  String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  legacy_id    Int
  country      countries @relation(fields: [country_id], references: [id])

  cities       cities[]
}

model cities {
  id          Int     @id @default(autoincrement())
  state_id    Int 
  is_active   Boolean @default(value: "true")
  name        String 
  slug        String  @unique
  latitude    String 
  longitude   String 
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  by_bot      Boolean @default(value: "false")
  state       states @relation(fields: [state_id], references: [id])

  jobs        jobs[]
}

model jobs {
  id             Int      @id @default(autoincrement())
  category_id    Int
  city_id        Int  
  company_id     Int    
  is_active      Boolean  @default(value: "true")
  title          String
  description    String
  via            String 
  published_at   DateTime
  gogole_job_id  String   @unique
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  category       categories @relation(fields: [category_id], references: [id])
  city           cities     @relation(fields: [city_id], references: [id])
  company        companies  @relation(fields: [company_id], references: [id])
}

model categories {
  id          Int       @id @default(autoincrement())
  name        String    
  is_active   Boolean  @default(value: "true")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  jobs        jobs[]
}

model companies {
  id          Int      @id @default(autoincrement())
  is_customer Boolean  @default(value: "false")
  name        String
  slug        String   @unique
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  jobs        jobs[]
}






