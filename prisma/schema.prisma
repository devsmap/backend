// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Country {
  id           Int     @id @default(autoincrement())
  isActive     Boolean @default(value: "true")
  isCollected  Boolean @default(value: "true")
  name         String  @unique
  region       String
  subregion    String
  google_uule  String
  google_gl    String
  google_hl    String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  states       State[]
}

model State {
  id           Int     @id @default(autoincrement())
  countryId    Int 
  isActive     Boolean @default(value: "true")
  isCollected  Boolean @default(value: "true")  
  name         String  @unique
  google_uule  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  country      Country @relation(fields: [countryId], references: [id])
  city         City[]

  @@index([countryId], map: "index_states_on_country_id")
}

model City {
  id           Int     @id @default(autoincrement())
  stateId      Int 
  isActive     Boolean @default(value: "true")
  name         String 
  google_uule  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  state        State @relation(fields: [stateId], references: [id])
  
  // job          Job[]
}

// model cities_not_found {
//   id         BigInt   @id @default(autoincrement())
//   state_id   BigInt
//   name       String   @db.VarChar
//   created_at DateTime @db.Timestamp(6)
// }

// model categories {
//   id               BigInt       @id @default(autoincrement())
//   name             String       @unique(map: "index_categories_on_name") @db.VarChar
//   parent_id        BigInt?
//   is_active        Boolean?     @default(false)
//   created_at       DateTime     @db.Timestamp(6)
//   updated_at       DateTime     @db.Timestamp(6)
//   categories       categories?  @relation("categoriesTocategories_parent_id", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_rails_82f48f7407")
//   other_categories categories[] @relation("categoriesTocategories_parent_id")
//   jobs             jobs[]

//   @@index([parent_id], map: "index_categories_on_parent_id")
// }

// model companies {
//   id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//   is_customer Boolean?  @default(false)
//   name        String?   @db.VarChar
//   slug        String?   @unique(map: "index_companies_on_slug") @db.VarChar
//   created_at  DateTime  @db.Timestamp(6)
//   updated_at  DateTime  @db.Timestamp(6)
//   deleted_at  DateTime? @db.Timestamp(6)
//   jobs        jobs[]
// }

// model jobs {
//   id             String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//   category_id    BigInt
//   company_id     String     @db.Uuid
//   city_id        BigInt
//   is_active      Boolean?   @default(false)
//   title          String?    @db.VarChar
//   description    String?
//   via            String?    @db.VarChar
//   link           String?    @db.VarChar
//   published_at   DateTime?  @db.Timestamp(6)
//   time_zone      String?    @db.VarChar
//   gogole_job_id  String?    @unique(map: "index_jobs_on_gogole_job_id") @db.VarChar
//   created_at     DateTime   @db.Timestamp(6)
//   updated_at     DateTime   @db.Timestamp(6)
//   deleted_at     DateTime?  @db.Timestamp(6)
//   deleted_reason String?    @db.VarChar
//   categories     categories @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_1cf0b3b406")
//   cities         cities     @relation(fields: [city_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_54d543406a")
//   companies      companies  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_b34da78090")

//   @@index([category_id], map: "index_jobs_on_category_id")
//   @@index([city_id], map: "index_jobs_on_city_id")
//   @@index([company_id], map: "index_jobs_on_company_id")
// }


