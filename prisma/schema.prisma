// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Country {
  id           Int     @id @default(autoincrement())
  is_active    Boolean @default(value: "true")
  is_collected Boolean @default(value: "true")
  name         String  @unique
  region       String
  subregion    String
  google_gl    String
  google_hl    String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  legacy_id    Int 

  states       State[]
}

model State {
  id           Int     @id @default(autoincrement())
  country_id   Int 
  is_active    Boolean @default(value: "true")
  is_collected Boolean @default(value: "true")  
  name         String 
  google_uule  String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  legacy_id    Int
  country      Country @relation(fields: [country_id], references: [id])

  cities       City[]
}

model City {
  id          Int     @id @default(autoincrement())
  state_id    Int 
  is_active   Boolean @default(value: "true")
  name        String 
  slug        String 
  latitude    String 
  longitude   String 
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  state       State @relation(fields: [state_id], references: [id])

  jobs        Job[]
}

model Job {
  id             Int      @id @default(autoincrement())
  category_id    Int
  city_id        Int  
  company_id     Int    
  is_active      Boolean  @default(value: "true")
  title          String
  description    String
  via            String 
  link           String
  published_at   DateTime
  time_zone      String
  gogole_job_id  String
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  category       Category @relation(fields: [category_id], references: [id])
  city           City     @relation(fields: [city_id], references: [id])
  company        Company  @relation(fields: [company_id], references: [id])
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    
  is_active   Boolean  @default(value: "true")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  jobs        Job[]
}

model Company {
  id          Int      @id @default(autoincrement())
  is_customer Boolean  @default(value: "false")
  name        String
  slug        String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  jobs        Job[]
}

model city_not_found {
  id         Int   @id @default(autoincrement())
  state_id   Int
  name       String 
  created_at DateTime @default(now())
}








